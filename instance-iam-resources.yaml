AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template creates an IAM Role that forms the basis of an Instance Profile.
  It outputs the name and arn of both profile and associated role.

Parameters:

  App:
    Type: String

  Env:
    Type: String
    Default: test
    AllowedValues:
      - dev
      - test
      - prod

  EnableLogging:
    Description: >
      A boolean that determines whether the instance may write its logs
      to CloudWatch.
    Type: String
    AllowedValues:
      - false
      - true
    Default: false

  LogGroupName:
    Description: >
      A name for the log group if logging is enabled.
    Type: String
    Default: "logging_disabled"

Conditions:
  LoggingEnabled:
    Fn::Equals:
      - !Ref EnableLogging
      - true
  LoggingDisabled:
    Fn::Not:
      - Fn::Equals:
          - !Ref EnableLogging
          - true

Resources:

  InstanceRoleNoLogging:
    Type: AWS::IAM::Role
    Condition: LoggingDisabled
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/instance_roles/'
      Policies:
        - PolicyName: BucketPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: 'arn:aws:s3:::ec2.lib.fsu.edu'
                Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListBucketVersions'
              - Effect: Allow
                Resource: !Sub 'arn:aws:s3:::ec2.lib.fsu.edu/${App}/${Env}/*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:CreateMultipartUpload'
                  - 's3:CompleteMultipartUpload'
                  - 's3:AbortMultipartUpload'
                  - 's3:ListMultipartUploads'
              - Effect: Allow
                Resource: 'arn:aws:s3:::va-backups.lib.fsu.edu'
                Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListBucketVersions'
              - Effect: Allow
                Resource: !Sub 'arn:aws:s3:::va-backups.lib.fsu.edu/${App}/${Env}/*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:CreateMultipartUpload'
                  - 's3:CompleteMultipartUpload'
                  - 's3:AbortMultipartUpload'
                  - 's3:ListMultipartUploads'
        - PolicyName: Ec2ApiPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:CreateTags'
        - PolicyName: StackResourcePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'cloudformation:DescribeStackResource'
        - PolicyName: AcmAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'acm:GetCertificate'
        - PolicyName: ParametersPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:DescribeParameters'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource: !Sub 'arn:aws:ssm:us-east-1:${AWS::AccountId}:parameter/${App}/${Env}/*'
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource: !Sub 'arn:aws:ssm:us-east-1:${AWS::AccountId}:parameter/default/rds/*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - 'arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy'

  InstanceRoleWithLogging:
    Type: AWS::IAM::Role
    Condition: LoggingEnabled
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/instance_roles/'
      Policies:
        - PolicyName: BucketPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: 'arn:aws:s3:::ec2.lib.fsu.edu'
                Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListBucketVersions'
              - Effect: Allow
                Resource: !Sub 'arn:aws:s3:::ec2.lib.fsu.edu/${App}/${Env}/*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:CreateMultipartUpload'
                  - 's3:CompleteMultipartUpload'
                  - 's3:AbortMultipartUpload'
                  - 's3:ListMultipartUploads'
              - Effect: Allow
                Resource: 'arn:aws:s3:::va-backups.lib.fsu.edu'
                Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListBucketVersions'
              - Effect: Allow
                Resource: !Sub 'arn:aws:s3:::va-backups.lib.fsu.edu/${App}/${Env}/*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:CreateMultipartUpload'
                  - 's3:CompleteMultipartUpload'
                  - 's3:AbortMultipartUpload'
                  - 's3:ListMultipartUploads'
        - PolicyName: Ec2ApiPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:CreateTags'
        - PolicyName: StackResourcePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'cloudformation:DescribeStackResource'
        - PolicyName: AcmAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'acm:GetCertificate'
        - PolicyName: ParametersPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:DescribeParameters'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Env}/*'
              - Effect: Allow
                Action:
                  - 'ssm:PutParameter'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Env}/*'
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource: !Sub 'arn:aws:ssm:us-east-1:${AWS::AccountId}:parameter/default/rds/*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - 'arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy'

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Fn::If:
            - LoggingEnabled
            - !Ref InstanceRoleWithLogging
            - !Ref InstanceRoleNoLogging


  InstanceLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: LoggingEnabled
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: 14

Outputs:

  ProfileArn:
    Description: The Arn of the instance profile.
    Value: !GetAtt InstanceProfile.Arn

  ProfileName:
    Description: The name of the instance profile.
    Value: !Ref InstanceProfile

  RoleArn:
    Description: The arn of the role.
    Value:
      Fn::If:
        - LoggingEnabled
        - !GetAtt InstanceRoleWithLogging.Arn
        - !GetAtt InstanceRoleNoLogging.Arn

  RoleName:
    Description: The name of the role.
    Value:
      Fn::If:
        - LoggingEnabled
        - !Ref InstanceRoleWithLogging
        - !Ref InstanceRoleNoLogging

# vim: set fdm=indent: 
